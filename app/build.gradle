apply plugin: 'com.android.application'
apply from: './config_signingConfigs.gradle'


android {
    compileSdkVersion 28
    buildToolsVersion "30.0.2"
    defaultConfig {
        applicationId "com.zinc.com.zinc.flavordemo"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }



    buildTypes {
        debug {
            matchingFallbacks = ['release', 'debug']
            zipAlignEnabled false
            minifyEnabled false
            debuggable true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
//            signingConfig signingConfigs.gradleStudy
            matchingFallbacks = ['release', 'debug']
            zipAlignEnabled false
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        prod_debug.initWith(buildTypes.debug)
        dev_debug.initWith(buildTypes.debug)

        prod_release.initWith(buildTypes.release)
        dev_release.initWith(buildTypes.release)

        prod_debug {}
        prod_release {}

        stage_debug {
            initWith(buildTypes.debug)
        }
        stage_release {
            initWith(buildTypes.release)
        }

        dev_debug {}
        dev_release {}
    }

    variantFilter { variant ->
        def flavorName = variant.name
        def buildTypename = variant.buildType.name.toString()
        println "variantFilter Show flavor is " + flavorName+" with buildTypename : "+ buildTypename
//         println "variantFilter Show buildTypename !!  " + buildTypename//
        def isDev = buildTypename.contains("dev")
        //below ignore release or debug buildtype
        if (buildTypename.equals('release') || buildTypename.equals('debug')) {
//            println "Show match  buildtype "+variant.buildType.name
            println "variantFilter flavor : " + flavorName+" with default buildType : "+ buildTypename+" ignore"
            variant.setIgnore(true)
        }
    }

    flavorDimensions('abi')

    productFlavors {
        x86 {
            dimension 'abi'
            applicationId 'com.zinc.bear'
            manifestPlaceholders = [
                    hostName: "www.x86.com",
                    logo    : "@drawable/logo",
                    appName : "bear",
            ]

            signingConfig signingConfigs.jiangpengyong
            versionCode 1898
            versionName '1.8.98'

            buildConfigField('String', 'name', '"XiaoPenYou"')
            buildConfigField('int', 'age', '26')
            matchingFallbacks = ['pro']
            missingDimensionStrategy 'version', 'v1'
        }

        armV7 {
            dimension 'abi'
            applicationId 'com.zinc.shark'
            manifestPlaceholders = [
                    hostName: "www.armv7.com",
                    logo    : "@drawable/logo",
                    appName : "shark",
            ]

            signingConfig signingConfigs.xiaopenyou
            versionCode 1666
            versionName '1.6.66'
            buildConfigField('String', 'name', '"JiangPengYong"')
            buildConfigField('int', 'age', '26')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    x86Implementation project(':flavor_x86')
}
