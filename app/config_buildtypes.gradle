apply from: './config_signingConfigs.gradle'
android {
    buildTypes {
        debug {
            matchingFallbacks = ['release', 'debug']
            zipAlignEnabled false
            minifyEnabled false
            debuggable true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
//            signingConfig signingConfigs.gradleStudy
            matchingFallbacks = ['release', 'debug']
            zipAlignEnabled false
            minifyEnabled false
            shrinkResources false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        prod_debug.initWith(buildTypes.debug)
        dev_debug.initWith(buildTypes.debug)

        prod_release.initWith(buildTypes.release)
        dev_release.initWith(buildTypes.release)

        prod_debug {}
        prod_release {}

        stage_debug {
            initWith(buildTypes.debug)
        }
        stage_release {
            initWith(buildTypes.release)
        }

        dev_debug {}
        dev_release {}
    }

    variantFilter { variant ->
        def flavorName = variant.name
        def buildTypename = variant.buildType.name.toString()
        println "variantFilter Show flavor is " + flavorName+" with buildTypename : "+ buildTypename
//         println "variantFilter Show buildTypename !!  " + buildTypename//
        def isDev = buildTypename.contains("dev")
        //below ignore release or debug buildtype
        if (buildTypename.equals('release') || buildTypename.equals('debug')) {
//            println "Show match  buildtype "+variant.buildType.name
            println "variantFilter flavor : " + flavorName+" with default buildType : "+ buildTypename+" ignore"
            variant.setIgnore(true)
        }
    }
}
